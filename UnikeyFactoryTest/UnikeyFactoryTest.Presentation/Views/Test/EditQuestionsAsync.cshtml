@using UnikeyFactoryTest.Presentation.Models.DTO
@model UnikeyFactoryTest.Presentation.Models.DTO.QuestionDto

@{
    ViewBag.Title = "EditQuestionsAsync";
    int numQuestion = Model.Position + 1;
}

<div class="container">
    @using (Html.BeginForm("SaveUpdateQuestion", "Test", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="alert alert-light" style="text-align:left;background-color:#2F00FC" role="alert">
                <img id="unikeyLogo" src="~/Content/ICONS/unikeyLogo.png" width="50" height="50" style="margin-right:10px" class="d-inline-block align-top" alt="UnikeyLogo">
                <label style="font-size:35px;color:white">Unikey s.r.l</label>
            </div>
            <div class="alert alert-light" style="text-align:center" role="alert">
                <h2 style="color:darkblue">Edit Question</h2>
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.TestId)
            @Html.HiddenFor(model => model.Position)

            <div class="form-group">
                <div class="alert alert-heading" style="text-align:center; padding-top:0em; padding-bottom:0em" role="alert">
                    <h4 style="color:Highlight">Question @numQuestion</h4>
                </div>
                <b>@Html.Label("Question Text:", new { @class = "control-label col-md-12" })</b>
                <div class="col-md-12" style="text-align:center">
                    @Html.TextAreaFor(model => model.Text, new { @class = "form-control", style = "max-width: 100%;width: 100%; border-radius: 5px; border: 1px solid black;", @rows = 5 })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="alert alert-light" style="text-align:center" role="alert">
            <h2 style="color:darkblue">Edit Answers</h2>
        </div>

        for (int i = 1; i < Model.Answers.Count + 1; i++)
        {

            @Html.HiddenFor(model => model.Answers[i - 1].Id)
            @Html.HiddenFor(model => model.Answers[i - 1].QuestionId)

            <hr />
            <div class="form-group">
                <div class="alert alert-heading" style="text-align:center; padding-top:0em; padding-bottom:0em" role="alert">
                    <h4 style="color:Highlight">Answer @i</h4>
                </div>
                <b>@Html.Label("Answer Text:", htmlAttributes: new { @class = "control-label col-md-12" })</b>
                <div class="col-md-12" style="text-align:center">
                    @Html.TextAreaFor(model => Model.Answers[i - 1].Text, new { @class = "form-control", style = "max-width: 100%;width: 100%; border-radius: 5px; border: 1px solid black;", @rows = 5 })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-6" style="margin-top:7px">
                    <b>@Html.Label("Check if it's the correct answer:", new { @class = "control-label col-md-12" })</b>
                </div>
                <div class="col-6" style="text-align:right;vertical-align:middle">
                    @Html.CheckBoxFor(model => Model.Answers[i - 1].IsCorrectBool, new { style = "margin-top:4px;margin-right:7px;zoom: 2" })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-6" style="margin-top:7px">
                    <b>@Html.Label("Answer Score:", new { @class = "control-label col-md-12" })</b>
                </div>
                <div class="col-6" style="text-align:right;vertical-align:middle">
                    @Html.TextBoxFor(model => Model.Answers[i - 1].Score, new { style = "max-width: 10%;width: 10%;border-radius: 3px; border: 1px solid black;margin-right:15px", type = "number" })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <br />
        <div class="form-group" style="text-align:left">
            <button type="submit" class="btn btn-info" id="checkout" title="Save">Update Question</button>
        </div>
    }

    <div style="text-align:right">
        @Html.ActionLink("Back to List", "TestContent", new { Id = Model.TestId })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
